@using System.Linq.Expressions
@using Core.Utils
@typeparam T

@if (IsFormDependencyLoading != null && IsFormDependencyLoading == true)
{
    <MudItem xs="@Xs" md="@Md">
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="30px" />
    </MudItem>
}
else
{
    <MudItem xs="@Xs" md="@Md">
        <MudDatePicker
            Date="Value"
            DateChanged="ValueChanged"
            For="For"
            Disabled="@Disabled"
            Label="@Label"
        />
    </MudItem>
}

@code {
    [Parameter] public DateTime? Value { get; set; }

    [Parameter] public EventCallback<DateTime?> ValueChanged { get; set; }

    [Parameter] public Expression<Func<DateTime?>>? For { get; set; }

    [Parameter] public string? Label { get; set; } = Constants.DefaultString;

    [Parameter] public bool Disabled { get; set; } = Constants.DefaultBoolean;
    
    [Parameter] public bool? IsFormDependencyLoading { get; set; } = Constants.DefaultBoolean;

    [Parameter] public int Xs { get; set; } = 6;

    [Parameter] public int Md { get; set; } = 6;
}